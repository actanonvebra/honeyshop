basePath: /
definitions:
  models.Checkout:
    properties:
      createdAt:
        type: string
      id:
        type: string
      total:
        type: number
      userID:
        type: string
    type: object
  models.Product:
    properties:
      category:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      password:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: ibrahimserhatbulut@gmail.com
    name: actanonvebra
  description: This is the API documentation for the Honeyshop honeypot project.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Honeyshop API
  version: "1.0"
paths:
  /cart/checkout/{userID}:
    post:
      consumes:
      - application/json
      description: Processes the user's cart and creates a checkout record
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Checkout completed successfully
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Cart not found
          schema:
            type: string
        "500":
          description: Failed to process checkout
          schema:
            type: string
      summary: Checkout Cart
      tags:
      - cart
  /checkout:
    post:
      consumes:
      - application/json
      description: Process a checkout for a user
      parameters:
      - description: Checkout data
        in: body
        name: checkout
        required: true
        schema:
          $ref: '#/definitions/models.Checkout'
      produces:
      - application/json
      responses:
        "200":
          description: Checkout completed successfully
          schema:
            type: string
        "400":
          description: Invalid Checkout
          schema:
            type: string
        "500":
          description: Checkout processing failed
          schema:
            type: string
      summary: Checkout
      tags:
      - checkout
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return token
      parameters:
      - description: User's login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Invalid credentials
          schema:
            type: string
        "429":
          description: Too many requests
          schema:
            type: string
      summary: Login User
      tags:
      - auth
  /products:
    get:
      consumes:
      - application/json
      description: Fetch a list of all available products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
        "500":
          description: Failed to fetch products
          schema:
            type: string
      summary: Get All Products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Add a new product to the inventory
      parameters:
      - description: Product data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Product added successfully
          schema:
            type: string
        "400":
          description: Missing required parameter
          schema:
            type: string
        "500":
          description: Failed to add product
          schema:
            type: string
      summary: Add Product
      tags:
      - products
  /products/search:
    get:
      consumes:
      - application/json
      description: Searc for products based on a search term
      parameters:
      - description: Search term for products
        in: query
        name: search
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
        "400":
          description: Invalid input detection
          schema:
            type: string
        "500":
          description: Failed to search products
          schema:
            type: string
      summary: Search Products
      tags:
      - products
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User's Username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: User's Password
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: User's Email
        in: body
        name: email
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Missing or invalid input
          schema:
            type: string
      summary: Register User
      tags:
      - auth
swagger: "2.0"
